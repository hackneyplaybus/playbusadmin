import { OnInit, SimpleChanges, OnChanges, EventEmitter, ElementRef } from '@angular/core';
import { ControlValueAccessor, Validator, FormControl } from '@angular/forms';
import { ListItem } from './multiselect.model';
import { DropdownSettings } from './multiselect.interface';
import { Item, Badge } from './menu-item';
export declare const DROPDOWN_CONTROL_VALUE_ACCESSOR: any;
export declare const DROPDOWN_CONTROL_VALIDATION: any;
export declare class AngularMultiSelect implements OnInit, ControlValueAccessor, OnChanges, Validator {
    _elementRef: ElementRef;
    data: Array<ListItem>;
    settings: DropdownSettings;
    onSelect: EventEmitter<ListItem>;
    onDeSelect: EventEmitter<ListItem>;
    onSelectAll: EventEmitter<Array<ListItem>>;
    onDeSelectAll: EventEmitter<Array<ListItem>>;
    onOpen: EventEmitter<any>;
    onClose: EventEmitter<any>;
    itemTempl: Item;
    badgeTempl: Badge;
    searchInput: ElementRef;
    selectedItems: Array<ListItem>;
    isActive: boolean;
    isSelectAll: boolean;
    groupedData: Array<ListItem>;
    filter: ListItem;
    chunkArray: any[];
    scrollTop: any;
    chunkIndex: any[];
    cachedItems: any[];
    totalRows: any;
    itemHeight: any;
    screenItemsLen: any;
    cachedItemsLen: any;
    totalHeight: any;
    scroller: any;
    maxBuffer: any;
    lastScrolled: any;
    lastRepaintY: any;
    defaultSettings: DropdownSettings;
    parseError: boolean;
    constructor(_elementRef: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
    ngAfterViewInit(): void;
    onItemClick(item: ListItem, index: number, evt: Event): boolean;
    validate(c: FormControl): any;
    private onTouchedCallback;
    private onChangeCallback;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    trackByFn(index: number, item: ListItem): Number;
    isSelected(clickedItem: ListItem): boolean;
    addSelected(item: ListItem): void;
    removeSelected(clickedItem: ListItem): void;
    toggleDropdown(evt: any): boolean;
    closeDropdown(): void;
    toggleSelectAll(): void;
    transformData(arr: Array<ListItem>, field: any): Array<ListItem>;
    renderChunk(fromPos: any, howMany: any): void;
    onScroll(e: any): void;
    updateView(scrollTop: any): void;
    filterInfiniteList(evt: any): void;
}
export declare class AngularMultiSelectModule {
}
